package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.util.Range;
import com.qualcomm.robotcore.hardware.Gamepad;


/**
 * TeleOp com:
 * - Locomo√ß√£o (roda_esq / roda_dir) - Gamepad 1
 * - Bra√ßo (subir: Y / descer: X) - Gamepad 2
 * - Garra (abrir: A / fechar: B) - Gamepad 2 (como DcMotor)
 * - Giro da garra (frente: LB / cima: RB) - Gamepad 2
 * - Servo coletor (abrir: LT / fechar: RT) - Gamepad 2
 */
@TeleOp(name = "TeleOp com Telemetria", group = "TeleOp")
public class Robotica extends LinearOpMode {

    private DcMotor roda_esq;
    private DcMotor roda_dir;
    private  DcMotor braco;
    private DcMotor garra;
    private Servo giro_garra;
    private Servo coletor; // Novo servo

    private final ElapsedTime runtime = new ElapsedTime();

    private static final double BRA√áO_MAX_POTENCIA = 0.6;
    private static final double GARRA_VELOCIDADE = 0.5;

    private static final double COLETOR_ABERTO = 0.5;   // servo aberto
    private static final double COLETOR_FECHADO = -0.4; // servo fechado

    @Override
    public void runOpMode() {
        telemetry.addData("Status", "Inicializando hardware...");
        telemetry.update();

        // Inicializa√ß√£o dos dispositivos

            roda_esq = hardwareMap.get(DcMotor.class, "roda_esq");
            roda_dir = hardwareMap.get(DcMotor.class, "roda_dir");
            braco = hardwareMap.get(DcMotor.class, "braco");
            garra = hardwareMap.get(DcMotor.class, "garra");
            giro_garra = hardwareMap.get(Servo.class, "giro_garra");
            coletor = hardwareMap.get(Servo.class, "coletor");


        // Configura√ß√£o dos motores
        roda_esq.setDirection(DcMotor.Direction.REVERSE);
        roda_dir.setDirection(DcMotor.Direction.FORWARD);
        braco.setDirection(DcMotor.Direction.FORWARD);
        garra.setDirection(DcMotor.Direction.FORWARD);
        
        telemetry.addData("Status", "Pronto para iniciar");
        telemetry.addData("Dicas", "Pressione START para come√ßar");
        telemetry.update();

        waitForStart();
        runtime.reset();

        while (opModeIsActive()) {
            Gamepad gamepadMovimento = gamepad1;
            Gamepad gamepadFuncoes = gamepad2;

            // === MOVIMENTO DO ROB√î (Gamepad 1) ===
            double drive = gamepad1.left_stick_y;
            double turn  =  -gamepad1.right_stick_x;
            double leftPower    = Range.clip(drive + turn, -0.8, 0.8) ;
            double rightPower   = Range.clip(drive - turn, -0.8, 0.8) ;
        
            

         
            roda_esq.setPower(leftPower);
            roda_dir.setPower(rightPower);

            // === CONTROLE DO BRA√áO (Gamepad 2) ===
            
            double power = -gamepad2.left_stick_y; // inverte para que "cima" suba
            double potencia = Range.clip(power *  1.0, -1.0, 1.0);
            if(power == 0){
            braco.setPower(0.1);
        }
            braco.setPower(potencia);
            
            
            braco.setPower(potencia);
            if (gamepadFuncoes.dpad_down) {
                potencia = 0.8;
            } else if (gamepadFuncoes.dpad_up) {
                potencia = -0.8;
            } else {
                potencia = -0.01;
            }

            

            // === CONTROLE DA GARRA (Motor) ===
            double controle = gamepad2.right_stick_y; // inverte para que "cima" suba
            double potencia2 = Range.clip(controle *  0.7, -0.7, 0.7);
            if(controle == 0){
            garra.setPower(-0.2);
        }
        garra.setPower(potencia2);
           

            // === GIRO DA GARRA (Servo) ===
            if (gamepad2.left_bumper) {
                giro_garra.setPosition(1.0);
            } else if (gamepad2.right_bumper) {
                giro_garra.setPosition(0.0);
            }

            // === COLETOR (Servo) ===
            if (gamepad2.left_trigger >= 0.5) {
                coletor.setPosition(COLETOR_ABERTO);
            } else if (gamepad2.right_trigger >= 0.5) {
                coletor.setPosition(COLETOR_FECHADO);
            }

            // === üîß TELMETRIA DETALHADA ===
            telemetry.addLine("üîß TELEMETRIA - CONTROLES");
            telemetry.addLine("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");

            // Gamepad 1 - Movimento
            telemetry.addLine("üéÆ Gamepad 1 (Movimento)");
            telemetry.addData("  DPAD Cima", gamepadMovimento.dpad_up ? "‚úÖ Pressionado" : "‚ùå");
            telemetry.addData("  DPAD Baixo", gamepadMovimento.dpad_down ? "‚úÖ Pressionado" : "‚ùå");
            telemetry.addData("  DPAD Esq", gamepadMovimento.dpad_left ? "‚úÖ Pressionado" : "‚ùå");
            telemetry.addData("  DPAD Dir", gamepadMovimento.dpad_right ? "‚úÖ Pressionado" : "‚ùå");
            telemetry.addData("  Stick Esq Y", "%.2f", power);

            // Gamepad 2 - Fun√ß√µes
            telemetry.addLine("");
            telemetry.addLine("‚öôÔ∏è Gamepad 2 (Fun√ß√µes)");
            telemetry.addData("  Bot√£o Y", gamepadFuncoes.y ? "‚¨ÜÔ∏è Subindo bra√ßo" : "");
            telemetry.addData("  Bot√£o X", gamepadFuncoes.x ? "‚¨áÔ∏è Descendo bra√ßo" : "");
            telemetry.addData("  Bot√£o A", gamepadFuncoes.a ? "üîì Abrindo garra" : "");
            telemetry.addData("  Bot√£o B", gamepadFuncoes.b ? "üîí Fechando garra" : "");
            telemetry.addData("  LB", gamepad2.left_bumper ? "üîÑ Giro frente" : "");
            telemetry.addData("  RB", gamepad2.right_bumper ? "üîÑ Giro cima" : "");
            telemetry.addData("  LT", gamepad2.left_trigger >= 0.5 ? "üîì Coletor aberto" : "");
            telemetry.addData("  RT", gamepad2.right_trigger >= 0.5 ? "üîí Coletor fechado" : "");

            // Estado dos atuadores
            telemetry.addLine("");
            telemetry.addLine("‚öôÔ∏è Estado dos Atuadores");
            
            telemetry.addData("  Bra√ßo", "Pot√™ncia: %.2f", braco.getPower());
            telemetry.addData("  Garra (Motor)", "Pot√™ncia: %.2f", garra.getPower());
            telemetry.addData("  Giro Garra", "Posi√ß√£o: %.2f", giro_garra.getPosition());
            telemetry.addData("  Coletor", "Posi√ß√£o: %.2f", coletor.getPosition());

            // Tempo
            telemetry.addLine("");
            telemetry.addData("‚è±Ô∏è Tempo", "%.1f s", runtime.seconds());

            telemetry.update();
        }
    }
}